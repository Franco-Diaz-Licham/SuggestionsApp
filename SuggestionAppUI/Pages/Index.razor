@page "/"

<PageTitle>Suggestions</PageTitle>

@* Heading *@
<div>
    <h1 class="page-heading text-uppercase mb-4">
        Information Technology (IT) Suggestions
    </h1>
    <div class="suggestion-container">
        <button @onclick="LoadCreatePage"
                class="suggest-btn btn btn-outline-light btn-lg text-uppercase">
            Suggest
        </button>
    </div>
</div>

@* Sorting and searching *@
<div class="row">
    <div class="suggestions-count col-md-4 text-light mt-2">
        @Suggestions.Count Suggestions
    </div>
    <div class="col-md-4 col-xl-5 btn-group">
        <button @onclick="@(() => OrderByNew(true))"
                class="btn btn-order btn-outline-light @SortedByNewClass(true)">
            New
        </button>
        <button @onclick="@(() => OrderByNew(false))"
                class="btn btn-order btn-outline-light @SortedByNewClass(false)">
            Popular
        </button>
    </div>
    <div class="col-md-4 col-xl-3 search-box">
        <input @oninput="@((txt) => OnSearchChanged((string)txt.Value))"
               class="form-control rounded-control"
               type="text"
               placeholder="Search"
               aria-label="Search Box"/>
    </div>
    <div class="col-12 d-block d-md-none">
        @if (Categories is not null && ShowCategories)
        {
            <div class="categories">
                <span class="text-uppercase fw-bold">
                    Category
                </span>
                <div @onclick="(() => OnCategoryChanged())"
                     class="@GetSelectedCategory()">
                    All
                </div>
                @foreach (var cat in Categories)
                {
                    <div @onclick="(() => OnCategoryChanged(cat.CategoryName))"
                         class="@GetSelectedCategory(cat.CategoryName)">
                        @cat.CategoryName
                    </div>
                }
            </div>
        }
        else
        {
            <div @onclick="(() => ShowCategories = true)" class="categories">
                <span class="selected-category">
                    @SelectedCategory
                </span>
            </div>
        }
        @if (Statuses is not null && ShowStatuses)
        {
            <div class="statuses">
                <span class="text-uppercase fw-bold">
                    Status
                </span>
                <div @onclick="(() => OnStatusChanged())" 
                     class="@GetSelectedStatus()">
                    All
                </div>
                @foreach (var stat in Statuses)
                {
                    <div @onclick="(() => OnStatusChanged(stat.StatusName))"
                         class="@GetSelectedStatus(stat.StatusName)">
                        @stat.StatusName
                    </div>
                }
            </div>
        }
        else
        {
            <div @onclick="(() => ShowStatuses = true)"
                 class="statuses">
                <span class="selected-status">
                    @SelectedStatus
                </span>
            </div>
        }
    </div>
</div>

@* Body *@
<div class="row">

    @* Suggestions *@
    <div class="col-md-8 col-xl-9">
        @if (Suggestions is not null)
        {
            <Virtualize Items="@Suggestions" Context="s" OverscanCount="10">
                <div class="suggestion-entry">
                    <div @onclick="(() => VoteUp(s))" class="@GetVoteClass(s)">
                        <div class="text-uppercase">
                            @GetUpvoteTopText(s)
                        </div>
                        <span class="oi oi-caret-top entry-upvote" />
                        <div class="text-uppercase">
                            @GetUpBoteBottomText(s)
                        </div>
                    </div>
                    <div class="suggestion-entry-text">
                        <div @onclick=@(() => OpenDetails(s)) class="suggestion-entry-text-title">
                            @s.Suggestion
                        </div>
                        @if (ArchivingSuggestion is null || ArchivingSuggestion.Id != s.Id)
                        {
                            <div class="suggestion-entry-bottom">
                                <div @onclick=@(() => OpenDetails(s)) class="suggestion-entry-text-category">
                                    @s.Category?.CategoryName
                                </div>
                                <AuthorizeView Policy="Admin">
                                    <button @onclick="(() => ArchivingSuggestion = s)"
                                            class="btn suggestion-entry-text-category btn-archive">
                                        Archive
                                    </button>
                                </AuthorizeView>
                            </div>
                        }
                        else
                        {
                            <div class="suggestion-entry-bottom">
                                <button @onclick="ArchiveSuggestion"
                                        class="btn btn-archive btn-archive-confirm">
                                    Confirm
                                </button>
                                <button @onclick="(() => ArchivingSuggestion = null)"
                                        class="btn btn-archive btn-archive-reject">
                                    Cancel
                                </button>
                            </div>
                        }
                    </div>
                    <div class="suggestion-entry-status @GetSuggestionStatusClass(s)">
                        <div class="suggestion-entry-status-text">
                            @s.SuggestionStatus?.StatusName
                        </div>
                    </div>
                </div>
            </Virtualize>
        }
    </div>

    @* Filtering *@
    <div class="col-md-4 col-xl-3 d-none d-md-block">

        @* Categories *@
        @if (Categories is not null)
        {
            <div class="categories">
                <span class="text-uppercase fw-bold">
                    Category
                </span>
                <div @onclick="(() => OnCategoryChanged())"
                     class="@GetSelectedCategory()">
                    All
                </div>
                @foreach (var cat in Categories)
                {
                    <div @onclick="(() => OnCategoryChanged(cat.CategoryName))"
                         class="@GetSelectedCategory(cat.CategoryName)">
                        @cat.CategoryName
                    </div>
                }
            </div>
        }

        @* Statuses *@
        @if (Statuses is not null)
        {
            <div class="statuses">
                <span class="text-uppercase fw-bold">
                    Status
                </span>
                <div @onclick="(() => OnStatusChanged())"
                     class="@GetSelectedStatus()">
                    All
                </div>
                @foreach (var stat in Statuses)
                {
                    <div @onclick="(() => OnStatusChanged(stat.StatusName))"
                         class="@GetSelectedStatus(stat.StatusName)">
                        @stat.StatusName
                    </div>
                }
            </div>
        }
    </div>
</div>